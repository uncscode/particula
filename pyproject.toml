[project]
name = "particula"
description = "a simple, fast, and powerful particle simulator"
readme = "readme.md"
requires-python = ">=3.9"
license = {file = "license"}
authors = [
    {name = "Particula developers", email = "uncscode@users.noreply.github.com"},
]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "License :: OSI Approved :: MIT License",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Atmospheric Science",
]
keywords = [
    "atmospheric", "particles", "climate", "aerosol", "particulate"
]

dependencies = [
    "numpy>=2.0.0", "scipy>=1.12",
]

# This is set automatically by flit using `particula.__version__`
dynamic = ["version"]

[project.urls]
homepage = "https://github.com/uncscode/particula"
repository = "https://github.com/uncscode/particula"

[project.optional-dependencies]
dev = [
    "pylint", "pytest", "autopep8", "jupyterlab",
    "typing", "build", "flake8", "jupyter-book", "ghp-import",
    "mkdocs-material", "handsdown", "mkdocs-jupyter", "openai",
    "GitPython", "ruff",
]
extra = [
    "matplotlib", "pandas", "pint", "thermo", "tqdm",
]

[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

# Configuration for ruff, a fast Python linter and formatter #
[tool.ruff]
line-length = 80
fix = true
extend-exclude = [
  "**/*.ipynb",    # ignore every .ipynb anywhere in the project
]

[tool.ruff.format]
docstring-code-line-length = 80

[tool.ruff.lint]
select = [
  "E", "F", "W", "C90", "D", "ANN", "B", "S", "N", "I"
]
ignore = [
  # choose one of the conflicting class-blank-line rules:
  "D203",  # or drop this and keep D211 instead
  "B008", # add back later
  "D205", # add back later
  "D102", # add back later
  "D107", # add back later
  "E501", # add back later
  # choose one of the conflicting multi-line-summary rules:
  "D213",  # or drop this and keep D212 instead
  "D417",  # Missing argument descriptions in the docstring :contentReference[oaicite:0]{index=0}
]
extend-ignore = [
  "ANN",    # ignore all missing-type-*/missing-return-type checks :contentReference[oaicite:1]{index=1}
]

[tool.ruff.lint.per-file-ignores]
# Ignore assert‐usage (S101) in any file ending with _test.py
"*_test.py" = ["S101", "E721", "B008"]

[tool.ruff.lint.pydocstyle]
# enforce Google-style sections and disable incompatible rules
convention = "google"          # accepts "google", "numpy", or "pep257"

