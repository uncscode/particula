Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/nbclient/client.py", line 1314, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/asyncio/base_events.py", line 654, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import numpy as np
from particula.base.gas import GasSpecies, Gas
from particula.base.particle import Particle, create_particle_strategy
from particula.base.aerosol import Aerosol

# Create a Gas instance
air = Gas()
air.add_species(
    name="Oxygen",
    mass=32,
    vapor_pressure=0.21,
    condensable=False)
air.add_species(
    name="Water Vapor",
    mass=18,
    vapor_pressure=2.3,
    condensable=True)

# Example particle sizes in meters
particle_distribution = np.array([1e-9, 2e-9, 3e-9], dtype=np.float64)
particle_density = np.float64(1000)  # Example density in kg/m^3
particle_concentration = np.array(
    [1000, 2000, 3000], dtype=np.float64)  # Example concentrations

particle = Particle(
    strategy=create_particle_strategy("radii_based"),
    distribution=particle_distribution,
    density=particle_density,
    concentration=particle_concentration
)

# Create an Aerosol instance
aerosol = Aerosol(gas=air, particle=particle)

# Accessing dynamically attached methods and properties
# Example method call, assuming such a method exists
print(f"Gas mass: {aerosol.gas_get_mass()}")
print(f"Particle mass: {aerosol.particle_get_total_mass()}")
------------------


Traceback [0;36m(most recent call last)[0m:

[0m  File [1;32m/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/IPython/core/interactiveshell.py:3577[0m in [1;35mrun_code[0m
    exec(code_obj, self.user_global_ns, self.user_ns)[0m

[0m  Cell [1;32mIn[1], line 2[0m
    from particula.base.gas import GasSpecies, Gas[0m

[0;36m  File [0;32m/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/particula/__init__.py:18[0;36m
[0;31m    from particula.logger_setup import setup[0;36m

[0;36m  File [0;32m/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/particula/logger_setup.py:62[0;36m[0m
[0;31m    logging_dir = "logging"[0m
[0m    ^[0m
[0;31mSyntaxError[0m[0;31m:[0m expected 'except' or 'finally' block


